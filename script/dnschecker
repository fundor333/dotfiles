#!/usr/bin/env python
import datetime
import logging
import os
import sys
from tabulate import tabulate
from ipwhois import IPWhois
import socket
import dns # pip install dnspython
import whois # pip install python-whois

logger = logging.getLogger("DNS Checker")

# http://rudyr.com/post/python-dns-lookup/

class bcolors:
  HEADER = "\033[95m"
  OKBLUE = "\033[94m"
  OKGREEN = "\033[92m"
  WARNING = "\033[93m"
  FAIL = "\033[91m"
  ENDC = "\033[0m"
  BOLD = "\033[1m"
  UNDERLINE = "\033[4m"


def dns_check(domain) -> [str, str, str]:
  w = whois.whois('webscraping.com')
  print(w)
  if w['domain_name'] is None:
    output_strng = [
      f"{bcolors.WARNING}XX{bcolors.ENDC}",
      f"{bcolors.WARNING}{domain}{bcolors.ENDC}",
      f"{bcolors.WARNING}Error trying to connect to socket{bcolors.ENDC}",
    ]
  else:
    flag = w.expiration_date >= (datetime.datetime.now()-datetime.timedelta(days=30))

    if flag:
      output_strng = [
        f"{bcolors.OKGREEN}OK{bcolors.ENDC}",
        f"{domain}",
        f"{w.expiration_date}",
      ]
    else:
      output_strng = [
        f"{bcolors.WARNING}XX{bcolors.ENDC}",
        f"{bcolors.WARNING}{domain}{bcolors.ENDC}",
        f"{bcolors.WARNING}{w.expiration_date}{bcolors.ENDC}",
      ]
  logger.info(output_strng)
  return output_strng


if __name__ == "__main__":
  headers = ["Ok", "Host", "Message"]
  if len(sys.argv) > 1:
    for e in sys.argv[1:]:
      print(tabulate(dns_check(e), headers, tablefmt="pipe"))
  else:
    f = open(os.path.expanduser("~/.dnschecker"), "r", encoding="utf-8")
    end_message = []
    for host in f.readlines():
      host = host.strip()
      end_message.append(dns_check(host))
    end_message = sorted(end_message, key=lambda x: x[1])
    print(tabulate(end_message, headers, tablefmt="pipe"))
